<metal:confirm-dialog define-macro="confirm-dialog">
<div id="dialog-confirm" title="Confirm ${structure: confirm['action']}">
  <p><span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>${structure: confirm['message']}</p>
    <label for="confirm-button"></label>
    <button name="confirm-button" id="confirm-button">Confirm</button>
</div>
</metal:confirm-dialog>
<metal:routes_to_node_data define-macro="routes_to_node_data">
<a class="hidden" tal:repeat="node python: dot.get_nodes()" tal:attributes="id python:'route_to_'+node.get_name()+'_data';href python: request.route_url('view_node_data',pipeline_id=pipeline.id,node=node.get_name())"/>
</metal:routes_to_node_data>

<metal:jquery_reload_select_nodes define-macro="jquery_reload_select_nodes">
<script language="javascript" type="text/javascript">
function reload_select_nodes() {
  $("#select_nodes", document).removeData();
  $("#select_nodes", document).empty().load("${structure:  request.route_url('select_nodes',pipeline_id=pipeline.id)}");
}
</script>
</metal:jquery_reload_select_nodes>

<metal:select_nodes define-macro="select_nodes">
<tal:block repeat="node python: dot.get_nodes()"><input type="hidden" tal:attributes="id python:'select_'+node.get_name(); name python:node.get_name()" value=0/></tal:block>
<!--FIXME: node names with spaces are not functioning properly-->
</metal:select_nodes>

<metal:jquery_hover_nodes_to_info define-macro="jquery_hover_nodes_to_info">
<script language="javascript" type="text/javascript">
function hover_nodes_to_info(svgdom){
  $(".node",svgdom).each(function() {
    var node_id = $(this).attr("id");
    $(this).children("a").mouseover( function() {
      $(".node_info").dialog("close");
      node = $(this).parent();
      node_id = node.attr("id");
      $('#'+node_id+'_info').dialog("open");
    })
  }); 
}
</script>
</metal:jquery_hover_nodes_to_info>

<metal:jquery_link_nodes_to_data define-macro="jquery_link_nodes_to_data">
<script language="javascript" type="text/javascript">
function link_nodes_to_data(svgdom){
  $('.node',svgdom).each(function() {
    node_id = $(this).attr("id")
    url = $("#route_to_"+node_id+"_data").attr("href") 
    $(this).find("a").attr( "xlink:href",url )
  })
}
function process_svg(){
  svgdom = $('svg',document).get(0)
  link_nodes_to_data(svgdom)
}
</script>
</metal:jquery_link_nodes_to_data>

<metal:jquery_link_nodes_to_select define-macro="jquery_link_nodes_to_select">
<script language="javascript" type="text/javascript">
function get_selected_node() {
  select_form = $("#select_nodes",document).get(0);
  return $(select_form).data("selected");
}
function set_selected_node(selected_node_id) {
  select_form = $("#select_nodes",document).get(0);
  $(select_form).data("selected", selected_node_id);
  selector = $("input[name="+selected_node_id+"]",select_form)
  selector.attr("value", "1");
}
function unselect_unselected_nodes() {
  select_form = $("#select_form",document).get(0);
  var selected_node = get_selected_node();
  $("input",select_form).each(function () {
    if($(this).attr("name") != selected_node) {
      $(this).val(0)
    }
  });
}
function update_node_color(node) {
  node_id = $(node).attr("id");
  select_form = $("#select_nodes",document).get(0);
  selector = $("input[name="+node_id+"]",select_form);
  ellipse = node.children("a").children("ellipse")
  if(selector.val() != "1") {
    ellipse.attr("fill","none")
  } else {
    ellipse.attr("fill","yellow")
  }
}
function update_node_colors(svgdom) {
  $(".node",svgdom).each(function() {
    update_node_color($(this))
  });
}
function link_nodes_to_select_one(svgdom) {
  select_form = $("#select_nodes",document).get(0);
  $(".node",svgdom).each(function() {
    $(this).children("a").attr("xlink:href","javascript:void;")
    $(this).children("a").unbind("click");
    $(this).children("a").click( function() {
      node = $(this).parent();
      set_selected_node($(node).attr("id"));
      unselect_unselected_nodes();
      update_node_colors(svgdom);
    });
  });
  set_selected_node('');
  unselect_unselected_nodes();
  update_node_colors(svgdom);
};
function link_nodes_to_edit_node_form(svgdom) {
  select_form = $("#select_nodes",document).get(0);
  $(".node",svgdom).each(function() {
    $(this).children("a").attr("xlink:href","javascript:void;")
    $(this).children("a").unbind("click");
    $(this).children("a").click( function() {
      node = $(this).parent();
      set_selected_node($(node).attr("id"));
      unselect_unselected_nodes();
      update_node_colors(svgdom);
      $("#node_id").val($(node).attr("id"));
    });
  });
  unselect_unselected_nodes();
  update_node_colors(svgdom);
};
function link_nodes_to_select(svgdom) {
  select_form = $("#select_form",document).get(0)
  $(".node",svgdom).each(function() {
    var node_id = $(this).attr("id");
    var selector = $("input[name="+node_id+"]",select_form);
    $(this).children("a").attr("xlink:href","javascript:;")
    $(this).children("a").unbind("click");
    $(this).children("a").click( function() {
      node = $(this).parent();
      node_id = node.attr("id");
      selector = $("input[name="+node_id+"]",select_form)
      if(selector.attr("value") != "1") {
        selector.attr("value", "1");
      } else {
        selector.attr("value", "0");
      }
      update_node_color(node)
    })
  }); 
};
function process_svg(){
  svgdom = $('svg').get(0)
  link_nodes_to_select_one(svgdom)
}

</script>
</metal:jquery_link_nodes_to_select>

<metal:jquery_show_svg define-macro="jquery_show_svg">
<script language="javascript" type="text/javascript">
$(document).ready(function(){
  svg_url = $("#pipeline_svg_link").attr("href") 
  $.get(svg_url, function(svg) {
    svgdom = $('svg',svg).get(0)
    $(svgdom).prependTo($('#pipeline'))

//    $('.node',document).each(function() {
//      $(this).children("a").attr("xlink:href","javascript:void();")
//    })
    process_svg();

  }, "xml");
});
</script>
<a class="hidden" id="pipeline_svg_link" href="${structure: dot.draw_svg(request)}"></a>
</metal:jquery_show_svg>

