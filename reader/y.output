Terminals unused in grammar

   UNMATCHED


Grammar

    0 $accept: graph $end

    1 graph: preprocessor_lines GRAPH ID OBRACE stmt_list EBRACE preprocessor_lines

    2 subgraph_preamble: %empty
    3                  | SUBGRAPH ID

    4 subgraph_begin: subgraph_preamble

    5 subgraph: subgraph_begin OBRACE stmt_list EBRACE

    6 stmt_list: %empty
    7          | stmt SEMICOLON stmt_list
    8          | stmt stmt_list

    9 stmt: edge_stmt
   10     | node_stmt
   11     | attr_stmt
   12     | subgraph
   13     | ID EQUALS ID

   14 attr_stmt: GRAPH attr_list
   15          | NODE attr_list
   16          | EDGE attr_list

   17 edge_stmt: node_stmt edgeRHS attr_list

   18 edgeRHS: EDGEOP node_id

   19 node_stmt: node_id attr_list

   20 port: %empty
   21     | COLON ID
   22     | COLON ID COLON ID

   23 node_id: ID port

   24 attr_list: %empty
   25          | LSBRACKET a_list RSBRACKET

   26 a_list: %empty
   27       | a_list COMMA attr
   28       | a_list attr

   29 attr: ID EQUALS ID

   30 preprocessor_lines: %empty
   31                   | preprocessor_lines PREPROCESSORLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 1 3 13 21 22 23 29
GRAPH (259) 1 14
NODE (260) 15
EDGE (261) 16
SUBGRAPH (262) 3
OBRACE (263) 1 5
EBRACE (264) 1 5
EDGEOP (265) 18
COMMA (266) 27
COLON (267) 21 22
SEMICOLON (268) 7
EQUALS (269) 13 29
LSBRACKET (270) 25
RSBRACKET (271) 25
PREPROCESSORLINE (272) 31
UNMATCHED (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
graph (20)
    on left: 1, on right: 0
subgraph_preamble (21)
    on left: 2 3, on right: 4
subgraph_begin (22)
    on left: 4, on right: 5
subgraph (23)
    on left: 5, on right: 12
stmt_list (24)
    on left: 6 7 8, on right: 1 5 7 8
stmt (25)
    on left: 9 10 11 12 13, on right: 7 8
attr_stmt (26)
    on left: 14 15 16, on right: 11
edge_stmt (27)
    on left: 17, on right: 9
edgeRHS (28)
    on left: 18, on right: 17
node_stmt (29)
    on left: 19, on right: 10 17
port (30)
    on left: 20 21 22, on right: 23
node_id (31)
    on left: 23, on right: 18 19
attr_list (32)
    on left: 24 25, on right: 14 15 16 17 19
a_list (33)
    on left: 26 27 28, on right: 25 27 28
attr (34)
    on left: 29, on right: 27 28
preprocessor_lines (35)
    on left: 30 31, on right: 1 31


State 0

    0 $accept: . graph $end

    $default  reduce using rule 30 (preprocessor_lines)

    graph               go to state 1
    preprocessor_lines  go to state 2


State 1

    0 $accept: graph . $end

    $end  shift, and go to state 3


State 2

    1 graph: preprocessor_lines . GRAPH ID OBRACE stmt_list EBRACE preprocessor_lines
   31 preprocessor_lines: preprocessor_lines . PREPROCESSORLINE

    GRAPH             shift, and go to state 4
    PREPROCESSORLINE  shift, and go to state 5


State 3

    0 $accept: graph $end .

    $default  accept


State 4

    1 graph: preprocessor_lines GRAPH . ID OBRACE stmt_list EBRACE preprocessor_lines

    ID  shift, and go to state 6


State 5

   31 preprocessor_lines: preprocessor_lines PREPROCESSORLINE .

    $default  reduce using rule 31 (preprocessor_lines)


State 6

    1 graph: preprocessor_lines GRAPH ID . OBRACE stmt_list EBRACE preprocessor_lines

    OBRACE  shift, and go to state 7


State 7

    1 graph: preprocessor_lines GRAPH ID OBRACE . stmt_list EBRACE preprocessor_lines

    ID        shift, and go to state 8
    GRAPH     shift, and go to state 9
    NODE      shift, and go to state 10
    EDGE      shift, and go to state 11
    SUBGRAPH  shift, and go to state 12

    EBRACE    reduce using rule 6 (stmt_list)
    $default  reduce using rule 2 (subgraph_preamble)

    subgraph_preamble  go to state 13
    subgraph_begin     go to state 14
    subgraph           go to state 15
    stmt_list          go to state 16
    stmt               go to state 17
    attr_stmt          go to state 18
    edge_stmt          go to state 19
    node_stmt          go to state 20
    node_id            go to state 21


State 8

   13 stmt: ID . EQUALS ID
   23 node_id: ID . port

    COLON   shift, and go to state 22
    EQUALS  shift, and go to state 23

    $default  reduce using rule 20 (port)

    port  go to state 24


State 9

   14 attr_stmt: GRAPH . attr_list

    LSBRACKET  shift, and go to state 25

    $default  reduce using rule 24 (attr_list)

    attr_list  go to state 26


State 10

   15 attr_stmt: NODE . attr_list

    LSBRACKET  shift, and go to state 25

    $default  reduce using rule 24 (attr_list)

    attr_list  go to state 27


State 11

   16 attr_stmt: EDGE . attr_list

    LSBRACKET  shift, and go to state 25

    $default  reduce using rule 24 (attr_list)

    attr_list  go to state 28


State 12

    3 subgraph_preamble: SUBGRAPH . ID

    ID  shift, and go to state 29


State 13

    4 subgraph_begin: subgraph_preamble .

    $default  reduce using rule 4 (subgraph_begin)


State 14

    5 subgraph: subgraph_begin . OBRACE stmt_list EBRACE

    OBRACE  shift, and go to state 30


State 15

   12 stmt: subgraph .

    $default  reduce using rule 12 (stmt)


State 16

    1 graph: preprocessor_lines GRAPH ID OBRACE stmt_list . EBRACE preprocessor_lines

    EBRACE  shift, and go to state 31


State 17

    7 stmt_list: stmt . SEMICOLON stmt_list
    8          | stmt . stmt_list

    ID         shift, and go to state 8
    GRAPH      shift, and go to state 9
    NODE       shift, and go to state 10
    EDGE       shift, and go to state 11
    SUBGRAPH   shift, and go to state 12
    SEMICOLON  shift, and go to state 32

    EBRACE    reduce using rule 6 (stmt_list)
    $default  reduce using rule 2 (subgraph_preamble)

    subgraph_preamble  go to state 13
    subgraph_begin     go to state 14
    subgraph           go to state 15
    stmt_list          go to state 33
    stmt               go to state 17
    attr_stmt          go to state 18
    edge_stmt          go to state 19
    node_stmt          go to state 20
    node_id            go to state 21


State 18

   11 stmt: attr_stmt .

    $default  reduce using rule 11 (stmt)


State 19

    9 stmt: edge_stmt .

    $default  reduce using rule 9 (stmt)


State 20

   10 stmt: node_stmt .
   17 edge_stmt: node_stmt . edgeRHS attr_list

    EDGEOP  shift, and go to state 34

    $default  reduce using rule 10 (stmt)

    edgeRHS  go to state 35


State 21

   19 node_stmt: node_id . attr_list

    LSBRACKET  shift, and go to state 25

    $default  reduce using rule 24 (attr_list)

    attr_list  go to state 36


State 22

   21 port: COLON . ID
   22     | COLON . ID COLON ID

    ID  shift, and go to state 37


State 23

   13 stmt: ID EQUALS . ID

    ID  shift, and go to state 38


State 24

   23 node_id: ID port .

    $default  reduce using rule 23 (node_id)


State 25

   25 attr_list: LSBRACKET . a_list RSBRACKET

    $default  reduce using rule 26 (a_list)

    a_list  go to state 39


State 26

   14 attr_stmt: GRAPH attr_list .

    $default  reduce using rule 14 (attr_stmt)


State 27

   15 attr_stmt: NODE attr_list .

    $default  reduce using rule 15 (attr_stmt)


State 28

   16 attr_stmt: EDGE attr_list .

    $default  reduce using rule 16 (attr_stmt)


State 29

    3 subgraph_preamble: SUBGRAPH ID .

    $default  reduce using rule 3 (subgraph_preamble)


State 30

    5 subgraph: subgraph_begin OBRACE . stmt_list EBRACE

    ID        shift, and go to state 8
    GRAPH     shift, and go to state 9
    NODE      shift, and go to state 10
    EDGE      shift, and go to state 11
    SUBGRAPH  shift, and go to state 12

    EBRACE    reduce using rule 6 (stmt_list)
    $default  reduce using rule 2 (subgraph_preamble)

    subgraph_preamble  go to state 13
    subgraph_begin     go to state 14
    subgraph           go to state 15
    stmt_list          go to state 40
    stmt               go to state 17
    attr_stmt          go to state 18
    edge_stmt          go to state 19
    node_stmt          go to state 20
    node_id            go to state 21


State 31

    1 graph: preprocessor_lines GRAPH ID OBRACE stmt_list EBRACE . preprocessor_lines

    $default  reduce using rule 30 (preprocessor_lines)

    preprocessor_lines  go to state 41


State 32

    7 stmt_list: stmt SEMICOLON . stmt_list

    ID        shift, and go to state 8
    GRAPH     shift, and go to state 9
    NODE      shift, and go to state 10
    EDGE      shift, and go to state 11
    SUBGRAPH  shift, and go to state 12

    EBRACE    reduce using rule 6 (stmt_list)
    $default  reduce using rule 2 (subgraph_preamble)

    subgraph_preamble  go to state 13
    subgraph_begin     go to state 14
    subgraph           go to state 15
    stmt_list          go to state 42
    stmt               go to state 17
    attr_stmt          go to state 18
    edge_stmt          go to state 19
    node_stmt          go to state 20
    node_id            go to state 21


State 33

    8 stmt_list: stmt stmt_list .

    $default  reduce using rule 8 (stmt_list)


State 34

   18 edgeRHS: EDGEOP . node_id

    ID  shift, and go to state 43

    node_id  go to state 44


State 35

   17 edge_stmt: node_stmt edgeRHS . attr_list

    LSBRACKET  shift, and go to state 25

    $default  reduce using rule 24 (attr_list)

    attr_list  go to state 45


State 36

   19 node_stmt: node_id attr_list .

    $default  reduce using rule 19 (node_stmt)


State 37

   21 port: COLON ID .
   22     | COLON ID . COLON ID

    COLON  shift, and go to state 46

    $default  reduce using rule 21 (port)


State 38

   13 stmt: ID EQUALS ID .

    $default  reduce using rule 13 (stmt)


State 39

   25 attr_list: LSBRACKET a_list . RSBRACKET
   27 a_list: a_list . COMMA attr
   28       | a_list . attr

    ID         shift, and go to state 47
    COMMA      shift, and go to state 48
    RSBRACKET  shift, and go to state 49

    attr  go to state 50


State 40

    5 subgraph: subgraph_begin OBRACE stmt_list . EBRACE

    EBRACE  shift, and go to state 51


State 41

    1 graph: preprocessor_lines GRAPH ID OBRACE stmt_list EBRACE preprocessor_lines .
   31 preprocessor_lines: preprocessor_lines . PREPROCESSORLINE

    PREPROCESSORLINE  shift, and go to state 5

    $default  reduce using rule 1 (graph)


State 42

    7 stmt_list: stmt SEMICOLON stmt_list .

    $default  reduce using rule 7 (stmt_list)


State 43

   23 node_id: ID . port

    COLON  shift, and go to state 22

    $default  reduce using rule 20 (port)

    port  go to state 24


State 44

   18 edgeRHS: EDGEOP node_id .

    $default  reduce using rule 18 (edgeRHS)


State 45

   17 edge_stmt: node_stmt edgeRHS attr_list .

    $default  reduce using rule 17 (edge_stmt)


State 46

   22 port: COLON ID COLON . ID

    ID  shift, and go to state 52


State 47

   29 attr: ID . EQUALS ID

    EQUALS  shift, and go to state 53


State 48

   27 a_list: a_list COMMA . attr

    ID  shift, and go to state 47

    attr  go to state 54


State 49

   25 attr_list: LSBRACKET a_list RSBRACKET .

    $default  reduce using rule 25 (attr_list)


State 50

   28 a_list: a_list attr .

    $default  reduce using rule 28 (a_list)


State 51

    5 subgraph: subgraph_begin OBRACE stmt_list EBRACE .

    $default  reduce using rule 5 (subgraph)


State 52

   22 port: COLON ID COLON ID .

    $default  reduce using rule 22 (port)


State 53

   29 attr: ID EQUALS . ID

    ID  shift, and go to state 55


State 54

   27 a_list: a_list COMMA attr .

    $default  reduce using rule 27 (a_list)


State 55

   29 attr: ID EQUALS ID .

    $default  reduce using rule 29 (attr)
